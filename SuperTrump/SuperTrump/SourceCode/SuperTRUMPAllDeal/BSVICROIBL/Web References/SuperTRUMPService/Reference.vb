'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3615
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3615.
'
Namespace SuperTRUMPService
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="IClientServiceSoapPort", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class IClientServiceSoapPort
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private PingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ProcessMQMessageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ProcessPricingRequestOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.BSVICROIBL.My.MySettings.Default.BSVICROIBL_SuperTRUMPService_SupertrumpService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event PingCompleted As PingCompletedEventHandler
        
        '''<remarks/>
        Public Event ProcessMQMessageCompleted As ProcessMQMessageCompletedEventHandler
        
        '''<remarks/>
        Public Event ProcessPricingRequestCompleted As ProcessPricingRequestCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Ping", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Ping() As String
            Dim results() As Object = Me.Invoke("Ping", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PingAsync()
            Me.PingAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PingAsync(ByVal userState As Object)
            If (Me.PingOperationCompleted Is Nothing) Then
                Me.PingOperationCompleted = AddressOf Me.OnPingOperationCompleted
            End If
            Me.InvokeAsync("Ping", New Object(-1) {}, Me.PingOperationCompleted, userState)
        End Sub
        
        Private Sub OnPingOperationCompleted(ByVal arg As Object)
            If (Not (Me.PingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PingCompleted(Me, New PingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ProcessMQMessage", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ProcessMQMessage(ByVal astrMQMsgInfoXML As String) As String
            Dim results() As Object = Me.Invoke("ProcessMQMessage", New Object() {astrMQMsgInfoXML})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ProcessMQMessageAsync(ByVal astrMQMsgInfoXML As String)
            Me.ProcessMQMessageAsync(astrMQMsgInfoXML, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ProcessMQMessageAsync(ByVal astrMQMsgInfoXML As String, ByVal userState As Object)
            If (Me.ProcessMQMessageOperationCompleted Is Nothing) Then
                Me.ProcessMQMessageOperationCompleted = AddressOf Me.OnProcessMQMessageOperationCompleted
            End If
            Me.InvokeAsync("ProcessMQMessage", New Object() {astrMQMsgInfoXML}, Me.ProcessMQMessageOperationCompleted, userState)
        End Sub
        
        Private Sub OnProcessMQMessageOperationCompleted(ByVal arg As Object)
            If (Not (Me.ProcessMQMessageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ProcessMQMessageCompleted(Me, New ProcessMQMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ProcessPricingRequest", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ProcessPricingRequest(ByVal astrPricingRequestXML As String) As String
            Dim results() As Object = Me.Invoke("ProcessPricingRequest", New Object() {astrPricingRequestXML})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ProcessPricingRequestAsync(ByVal astrPricingRequestXML As String)
            Me.ProcessPricingRequestAsync(astrPricingRequestXML, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ProcessPricingRequestAsync(ByVal astrPricingRequestXML As String, ByVal userState As Object)
            If (Me.ProcessPricingRequestOperationCompleted Is Nothing) Then
                Me.ProcessPricingRequestOperationCompleted = AddressOf Me.OnProcessPricingRequestOperationCompleted
            End If
            Me.InvokeAsync("ProcessPricingRequest", New Object() {astrPricingRequestXML}, Me.ProcessPricingRequestOperationCompleted, userState)
        End Sub
        
        Private Sub OnProcessPricingRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.ProcessPricingRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ProcessPricingRequestCompleted(Me, New ProcessPricingRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="ISuperTrumpServiceSoapPort", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class ISuperTrumpServiceSoapPort
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private ConvertPRMToXMLOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GeneratePRMFilesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAmortizationScheduleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPricingReportsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPRMParamsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ModifyPRMFilesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TestOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RunAdHocXMLInOutQueryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GeneratePRMFilesForPmtStructOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GeneratePRMFilesForPmtStruct2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.BSVICROIBL.My.MySettings.Default.BSVICROIBL_SuperTRUMPService_SupertrumpService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event ConvertPRMToXMLCompleted As ConvertPRMToXMLCompletedEventHandler
        
        '''<remarks/>
        Public Event GeneratePRMFilesCompleted As GeneratePRMFilesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAmortizationScheduleCompleted As GetAmortizationScheduleCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPricingReportsCompleted As GetPricingReportsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPRMParamsCompleted As GetPRMParamsCompletedEventHandler
        
        '''<remarks/>
        Public Event ModifyPRMFilesCompleted As ModifyPRMFilesCompletedEventHandler
        
        '''<remarks/>
        Public Event TestCompleted As TestCompletedEventHandler
        
        '''<remarks/>
        Public Event RunAdHocXMLInOutQueryCompleted As RunAdHocXMLInOutQueryCompletedEventHandler
        
        '''<remarks/>
        Public Event GeneratePRMFilesForPmtStructCompleted As GeneratePRMFilesForPmtStructCompletedEventHandler
        
        '''<remarks/>
        Public Event GeneratePRMFilesForPmtStruct2Completed As GeneratePRMFilesForPmtStruct2CompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConvertPRMToXML", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConvertPRMToXML(ByVal astrPRMFileListXML As String) As String
            Dim results() As Object = Me.Invoke("ConvertPRMToXML", New Object() {astrPRMFileListXML})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConvertPRMToXMLAsync(ByVal astrPRMFileListXML As String)
            Me.ConvertPRMToXMLAsync(astrPRMFileListXML, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConvertPRMToXMLAsync(ByVal astrPRMFileListXML As String, ByVal userState As Object)
            If (Me.ConvertPRMToXMLOperationCompleted Is Nothing) Then
                Me.ConvertPRMToXMLOperationCompleted = AddressOf Me.OnConvertPRMToXMLOperationCompleted
            End If
            Me.InvokeAsync("ConvertPRMToXML", New Object() {astrPRMFileListXML}, Me.ConvertPRMToXMLOperationCompleted, userState)
        End Sub
        
        Private Sub OnConvertPRMToXMLOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConvertPRMToXMLCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConvertPRMToXMLCompleted(Me, New ConvertPRMToXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GeneratePRMFiles", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GeneratePRMFiles(ByVal astrPRMInfoXML As String) As String
            Dim results() As Object = Me.Invoke("GeneratePRMFiles", New Object() {astrPRMInfoXML})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GeneratePRMFilesAsync(ByVal astrPRMInfoXML As String)
            Me.GeneratePRMFilesAsync(astrPRMInfoXML, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GeneratePRMFilesAsync(ByVal astrPRMInfoXML As String, ByVal userState As Object)
            If (Me.GeneratePRMFilesOperationCompleted Is Nothing) Then
                Me.GeneratePRMFilesOperationCompleted = AddressOf Me.OnGeneratePRMFilesOperationCompleted
            End If
            Me.InvokeAsync("GeneratePRMFiles", New Object() {astrPRMInfoXML}, Me.GeneratePRMFilesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGeneratePRMFilesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GeneratePRMFilesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GeneratePRMFilesCompleted(Me, New GeneratePRMFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAmortizationSchedule", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAmortizationSchedule(ByVal astrPRMFileListXML As String) As String
            Dim results() As Object = Me.Invoke("GetAmortizationSchedule", New Object() {astrPRMFileListXML})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAmortizationScheduleAsync(ByVal astrPRMFileListXML As String)
            Me.GetAmortizationScheduleAsync(astrPRMFileListXML, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAmortizationScheduleAsync(ByVal astrPRMFileListXML As String, ByVal userState As Object)
            If (Me.GetAmortizationScheduleOperationCompleted Is Nothing) Then
                Me.GetAmortizationScheduleOperationCompleted = AddressOf Me.OnGetAmortizationScheduleOperationCompleted
            End If
            Me.InvokeAsync("GetAmortizationSchedule", New Object() {astrPRMFileListXML}, Me.GetAmortizationScheduleOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAmortizationScheduleOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAmortizationScheduleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAmortizationScheduleCompleted(Me, New GetAmortizationScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPricingReports", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPricingReports(ByVal astrPricingRepInfoXML As String) As String
            Dim results() As Object = Me.Invoke("GetPricingReports", New Object() {astrPricingRepInfoXML})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPricingReportsAsync(ByVal astrPricingRepInfoXML As String)
            Me.GetPricingReportsAsync(astrPricingRepInfoXML, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPricingReportsAsync(ByVal astrPricingRepInfoXML As String, ByVal userState As Object)
            If (Me.GetPricingReportsOperationCompleted Is Nothing) Then
                Me.GetPricingReportsOperationCompleted = AddressOf Me.OnGetPricingReportsOperationCompleted
            End If
            Me.InvokeAsync("GetPricingReports", New Object() {astrPricingRepInfoXML}, Me.GetPricingReportsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPricingReportsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPricingReportsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPricingReportsCompleted(Me, New GetPricingReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPRMParams", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPRMParams(ByVal astrPRMParamsInfoXML As String) As String
            Dim results() As Object = Me.Invoke("GetPRMParams", New Object() {astrPRMParamsInfoXML})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPRMParamsAsync(ByVal astrPRMParamsInfoXML As String)
            Me.GetPRMParamsAsync(astrPRMParamsInfoXML, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPRMParamsAsync(ByVal astrPRMParamsInfoXML As String, ByVal userState As Object)
            If (Me.GetPRMParamsOperationCompleted Is Nothing) Then
                Me.GetPRMParamsOperationCompleted = AddressOf Me.OnGetPRMParamsOperationCompleted
            End If
            Me.InvokeAsync("GetPRMParams", New Object() {astrPRMParamsInfoXML}, Me.GetPRMParamsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPRMParamsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPRMParamsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPRMParamsCompleted(Me, New GetPRMParamsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ModifyPRMFiles", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ModifyPRMFiles(ByVal astrModifyPRMFilesXML As String) As String
            Dim results() As Object = Me.Invoke("ModifyPRMFiles", New Object() {astrModifyPRMFilesXML})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ModifyPRMFilesAsync(ByVal astrModifyPRMFilesXML As String)
            Me.ModifyPRMFilesAsync(astrModifyPRMFilesXML, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ModifyPRMFilesAsync(ByVal astrModifyPRMFilesXML As String, ByVal userState As Object)
            If (Me.ModifyPRMFilesOperationCompleted Is Nothing) Then
                Me.ModifyPRMFilesOperationCompleted = AddressOf Me.OnModifyPRMFilesOperationCompleted
            End If
            Me.InvokeAsync("ModifyPRMFiles", New Object() {astrModifyPRMFilesXML}, Me.ModifyPRMFilesOperationCompleted, userState)
        End Sub
        
        Private Sub OnModifyPRMFilesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ModifyPRMFilesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ModifyPRMFilesCompleted(Me, New ModifyPRMFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Test", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Test() As String
            Dim results() As Object = Me.Invoke("Test", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TestAsync()
            Me.TestAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TestAsync(ByVal userState As Object)
            If (Me.TestOperationCompleted Is Nothing) Then
                Me.TestOperationCompleted = AddressOf Me.OnTestOperationCompleted
            End If
            Me.InvokeAsync("Test", New Object(-1) {}, Me.TestOperationCompleted, userState)
        End Sub
        
        Private Sub OnTestOperationCompleted(ByVal arg As Object)
            If (Not (Me.TestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TestCompleted(Me, New TestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RunAdHocXMLInOutQuery", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RunAdHocXMLInOutQuery(ByVal astrXMLInOutQuery As String) As String
            Dim results() As Object = Me.Invoke("RunAdHocXMLInOutQuery", New Object() {astrXMLInOutQuery})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RunAdHocXMLInOutQueryAsync(ByVal astrXMLInOutQuery As String)
            Me.RunAdHocXMLInOutQueryAsync(astrXMLInOutQuery, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RunAdHocXMLInOutQueryAsync(ByVal astrXMLInOutQuery As String, ByVal userState As Object)
            If (Me.RunAdHocXMLInOutQueryOperationCompleted Is Nothing) Then
                Me.RunAdHocXMLInOutQueryOperationCompleted = AddressOf Me.OnRunAdHocXMLInOutQueryOperationCompleted
            End If
            Me.InvokeAsync("RunAdHocXMLInOutQuery", New Object() {astrXMLInOutQuery}, Me.RunAdHocXMLInOutQueryOperationCompleted, userState)
        End Sub
        
        Private Sub OnRunAdHocXMLInOutQueryOperationCompleted(ByVal arg As Object)
            If (Not (Me.RunAdHocXMLInOutQueryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RunAdHocXMLInOutQueryCompleted(Me, New RunAdHocXMLInOutQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GeneratePRMFilesForPmtStruct", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GeneratePRMFilesForPmtStruct(ByVal astrXMLInOutQuery As String) As String
            Dim results() As Object = Me.Invoke("GeneratePRMFilesForPmtStruct", New Object() {astrXMLInOutQuery})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GeneratePRMFilesForPmtStructAsync(ByVal astrXMLInOutQuery As String)
            Me.GeneratePRMFilesForPmtStructAsync(astrXMLInOutQuery, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GeneratePRMFilesForPmtStructAsync(ByVal astrXMLInOutQuery As String, ByVal userState As Object)
            If (Me.GeneratePRMFilesForPmtStructOperationCompleted Is Nothing) Then
                Me.GeneratePRMFilesForPmtStructOperationCompleted = AddressOf Me.OnGeneratePRMFilesForPmtStructOperationCompleted
            End If
            Me.InvokeAsync("GeneratePRMFilesForPmtStruct", New Object() {astrXMLInOutQuery}, Me.GeneratePRMFilesForPmtStructOperationCompleted, userState)
        End Sub
        
        Private Sub OnGeneratePRMFilesForPmtStructOperationCompleted(ByVal arg As Object)
            If (Not (Me.GeneratePRMFilesForPmtStructCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GeneratePRMFilesForPmtStructCompleted(Me, New GeneratePRMFilesForPmtStructCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GeneratePRMFilesForPmtStruct2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GeneratePRMFilesForPmtStruct2(ByVal astrXMLInOutQuery As String) As String
            Dim results() As Object = Me.Invoke("GeneratePRMFilesForPmtStruct2", New Object() {astrXMLInOutQuery})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GeneratePRMFilesForPmtStruct2Async(ByVal astrXMLInOutQuery As String)
            Me.GeneratePRMFilesForPmtStruct2Async(astrXMLInOutQuery, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GeneratePRMFilesForPmtStruct2Async(ByVal astrXMLInOutQuery As String, ByVal userState As Object)
            If (Me.GeneratePRMFilesForPmtStruct2OperationCompleted Is Nothing) Then
                Me.GeneratePRMFilesForPmtStruct2OperationCompleted = AddressOf Me.OnGeneratePRMFilesForPmtStruct2OperationCompleted
            End If
            Me.InvokeAsync("GeneratePRMFilesForPmtStruct2", New Object() {astrXMLInOutQuery}, Me.GeneratePRMFilesForPmtStruct2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGeneratePRMFilesForPmtStruct2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GeneratePRMFilesForPmtStruct2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GeneratePRMFilesForPmtStruct2Completed(Me, New GeneratePRMFilesForPmtStruct2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub PingCompletedEventHandler(ByVal sender As Object, ByVal e As PingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub ProcessMQMessageCompletedEventHandler(ByVal sender As Object, ByVal e As ProcessMQMessageCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ProcessMQMessageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub ProcessPricingRequestCompletedEventHandler(ByVal sender As Object, ByVal e As ProcessPricingRequestCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ProcessPricingRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub ConvertPRMToXMLCompletedEventHandler(ByVal sender As Object, ByVal e As ConvertPRMToXMLCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConvertPRMToXMLCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GeneratePRMFilesCompletedEventHandler(ByVal sender As Object, ByVal e As GeneratePRMFilesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GeneratePRMFilesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetAmortizationScheduleCompletedEventHandler(ByVal sender As Object, ByVal e As GetAmortizationScheduleCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAmortizationScheduleCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetPricingReportsCompletedEventHandler(ByVal sender As Object, ByVal e As GetPricingReportsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPricingReportsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GetPRMParamsCompletedEventHandler(ByVal sender As Object, ByVal e As GetPRMParamsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPRMParamsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub ModifyPRMFilesCompletedEventHandler(ByVal sender As Object, ByVal e As ModifyPRMFilesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ModifyPRMFilesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub TestCompletedEventHandler(ByVal sender As Object, ByVal e As TestCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub RunAdHocXMLInOutQueryCompletedEventHandler(ByVal sender As Object, ByVal e As RunAdHocXMLInOutQueryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RunAdHocXMLInOutQueryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GeneratePRMFilesForPmtStructCompletedEventHandler(ByVal sender As Object, ByVal e As GeneratePRMFilesForPmtStructCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GeneratePRMFilesForPmtStructCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")>  _
    Public Delegate Sub GeneratePRMFilesForPmtStruct2CompletedEventHandler(ByVal sender As Object, ByVal e As GeneratePRMFilesForPmtStruct2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GeneratePRMFilesForPmtStruct2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
